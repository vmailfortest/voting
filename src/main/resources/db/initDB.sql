drop table votes IF EXISTS;
drop table user_roles IF EXISTS;
drop table users IF EXISTS;
drop table dishes IF EXISTS;
drop table restaurants IF EXISTS;
drop sequence global_seq IF EXISTS;

create sequence GLOBAL_SEQ AS INTEGER START with 100000;

create TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  email            VARCHAR(255)            NOT NULL,
  password         VARCHAR(255)            NOT NULL,
  registered       TIMESTAMP DEFAULT now() NOT NULL,
  enabled          BOOLEAN DEFAULT TRUE    NOT NULL,
);
create UNIQUE INDEX users_unique_email_idx
  ON USERS (email);

create TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id) ON delete CASCADE
);

create TABLE restaurants
(
  id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name        VARCHAR(30) NOT NULL,
);

create TABLE dishes
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  datetime      DATE    NOT NULL,
  name          VARCHAR(30)  NOT NULL,
  restaurant_id INTEGER      NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id) ON delete CASCADE
);

create TABLE votes
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  datetime      TIMESTAMP    NOT NULL,
  user_id       INTEGER      NOT NULL,
  restaurant_id INTEGER      NOT NULL,
  FOREIGN KEY (user_id) REFERENCES USERS (id) ON delete CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id) ON delete CASCADE
);